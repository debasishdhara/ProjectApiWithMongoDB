const swaggerJsDoc = require('swagger-jsdoc');
const mongooseToSwagger = require('mongoose-to-swagger');
const models = require('@models');

let swaggerSchemas = {};
// Loop through all models and convert them to Swagger schemas
for (const [name, model] of Object.entries(models)) {
    const swaggerModel = mongooseToSwagger(model);
    // Add the generated Swagger schema to the schemas object
    swaggerSchemas[name] = swaggerModel;  // Correctly using the 'swagger' property from the mongoose-to-swagger output
}

// Loop through all models and convert them to Swagger schemas
const { routeJson } = require('@routes');
const path = require('path');

const options = {
    definition: {
        openapi: '3.0.0',
        info: {
            title: 'Project API Docs',
            version: '1.0.0',
            description: 'API documentation generated by swagger-jsdoc',
        },
        components: {
            schemas: swaggerSchemas,
            securitySchemes: {
                bearerAuth: {
                  type: 'http',
                  scheme: 'bearer',
                  bearerFormat: 'JWT',
                  description: 'JWT Authorization header using the Bearer scheme',
                },
            },
        },
        security: [
            {
              bearerAuth: [],
            },
        ],
        servers: [
            {
                url: 'http://localhost:3000/api',
                description: 'Local server',
            },
        ],
        paths: routeJson,
    },
    apis: ['./src/routes/*.js'], // Path to your route files with Swagger JSDoc
};


const swaggerSpec = swaggerJsDoc(options);

module.exports = swaggerSpec;
